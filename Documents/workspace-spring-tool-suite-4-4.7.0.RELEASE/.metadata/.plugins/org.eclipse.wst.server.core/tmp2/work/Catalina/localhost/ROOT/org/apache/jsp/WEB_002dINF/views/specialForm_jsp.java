/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-27 05:56:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.woongjin.woongs.model.ProfileDto;
import com.woongjin.woongs.model.ProfileMainDto;

public final class specialForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/C:/Users/gusql/Documents/workspace-spring-tool-suite-4-4.7.0.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/woongs/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1588032890000L));
    _jspx_dependants.put("jar:file:/C:/Users/gusql/Documents/workspace-spring-tool-suite-4-4.7.0.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/woongs/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1596332406682L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar", Long.valueOf(1596332405747L));
    _jspx_dependants.put("jar:file:/C:/Users/gusql/Documents/workspace-spring-tool-suite-4-4.7.0.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/woongs/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1588032890000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.woongjin.woongs.model.ProfileMainDto");
    _jspx_imports_classes.add("com.woongjin.woongs.model.ProfileDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>전문분야</title>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("   <script>\n");
      out.write("      $(function() {\n");
      out.write("\n");
      out.write("         var url = \"tags\";\n");
      out.write("         $.ajax({\n");
      out.write("            type : \"post\",\n");
      out.write("            url : url,\n");
      out.write("            dataType : \"json\"\n");
      out.write("         }).done(\n");
      out.write("               function(args) { //응답이 성공 상태 코드를 반환하면 호출되는 함수\n");
      out.write("                  for (var i = 0; i < args.length; i++) {\n");
      out.write("                     $(\"#tag\").append(\n");
      out.write("                           \"<option value='\"+args[i].no+\"'>\"\n");
      out.write("                                 + args[i].name + \"</option>\");\n");
      out.write("                  }\n");
      out.write("               }).fail(function(e) {\n");
      out.write("            alert(e.responseText);\n");
      out.write("         })\n");
      out.write("      });//ready 끝\n");
      out.write("      //상위 카테고리 선택\n");
      out.write("      function selectTag() {\n");
      out.write("         var no = $(\"#tag\").val();\n");
      out.write("\n");
      out.write("         if (no == 0) {\n");
      out.write("            $(\"#sub_tag option\").each(function() {\n");
      out.write("               $(\"#sub_tag option:eq(1)\").remove();\n");
      out.write("            });\n");
      out.write("            return;\n");
      out.write("         }\n");
      out.write("         //하위 카테고리 선택\n");
      out.write("         var url = \"sub_tags\";\n");
      out.write("         var params = \"tag_no=\" + no;\n");
      out.write("\n");
      out.write("         $.ajax({\n");
      out.write("            type : \"post\",\n");
      out.write("            url : url,\n");
      out.write("            data : params,\n");
      out.write("            dataType : \"json\"\n");
      out.write("         }).done(\n");
      out.write("               function(args) {\n");
      out.write("                  $(\"#sub_tag option\").each(function() {\n");
      out.write("                     $(\"#sub_tag option:eq(0)\").remove();\n");
      out.write("                  });\n");
      out.write("\n");
      out.write("                  $(\"#sub_tag\").append(\n");
      out.write("                        \"<option value=''>::하위카테고리::</option>\");\n");
      out.write("\n");
      out.write("                  for (var idx = 0; idx < args.length; idx++) {\n");
      out.write("                     $(\"#sub_tag\").append(\n");
      out.write("                           \"<option id = 'sub_tag' value= '\"+args[idx].no+\"'>\"\n");
      out.write("                                 + args[idx].name + \"</option>\");\n");
      out.write("\n");
      out.write("                  }\n");
      out.write("               }).fail(function(e) {\n");
      out.write("            alert(e.responseText);\n");
      out.write("         });\n");
      out.write("      }\n");
      out.write("      function checkItTest() {\n");
      out.write("         if ($(\"#tag\").val() == \"\" || $(\"#tag\").val() == 0\n");
      out.write("               || $(\"#sub_tag\").val() == \"\") {\n");
      out.write("            alert(\"카테고리 선택해 주세요\");\n");
      out.write("            return false;\n");
      out.write("         }\n");
      out.write("         return true;\n");
      out.write("      }\n");
      out.write("      function selectSub_tag() {\n");
      out.write("         var no = $(\"#sub_tag\").val();\n");
      out.write("         var url = \"/sub_tagOne\";\n");
      out.write("         var params = \"no=\" + no;\n");
      out.write("\n");
      out.write("         $.ajax({\n");
      out.write("            type : \"post\",\n");
      out.write("            url : url,\n");
      out.write("            data : params,\n");
      out.write("            dataType : \"json\"\n");
      out.write("         }).done(function(args) {\n");
      out.write("\n");
      out.write("            var tagname = \"상위 카테고리 : \" + args.tagname + \"<br>\";\n");
      out.write("            var subname = \"하위 카테고리 : \" + args.subname + \"<br>\";\n");
      out.write("\n");
      out.write("            $(\"#tagInfo\").text(\"\");//기존 내용 제거\n");
      out.write("            $(\"#tagInfo\").html(tagname + subname);\n");
      out.write("         }).fail(function(e) {\n");
      out.write("            alert(e.responseText);\n");
      out.write("         });\n");
      out.write("      }\n");
      out.write("   </script>\n");
      out.write("   <span>전문분야 상세분야 선택</span>\n");
      out.write("   <form action=\"/specialtag\" method=\"post\"\n");
      out.write("      onsubmit=\"return checkItTest()\">\n");
      out.write("      :: 상위카테고리 ::\n");
      out.write("      <select id=\"tag\" name=\"tag\" onchange=\"selectTag()\">\n");
      out.write("      </select> <br> <select id=\"sub_tag\" name=\"sub_tag\"\n");
      out.write("         onchange=\"selectSub_tag()\"></select> <input type=\"submit\"\n");
      out.write("         value=\"저장후다음\"> <br>\n");
      out.write("   </form>\n");
      out.write("   <div id=\"tagInfo\"></div>\n");
      out.write("   <br>\n");
      out.write("   <br>\n");
      out.write(" ");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.37
 * Generated at: 2020-08-27 06:34:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class careerForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("function checkItTest() {\n");
      out.write("        if ($(\"#company_name\").val() == \"\" ) {\n");
      out.write("           alert(\"회사명을 입력 주세요\");\n");
      out.write("           return false;\n");
      out.write("        }else if($(\"#dept_name\").val() == \"\"){\n");
      out.write("        \talert(\"근무부서를 입력 주세요\");\n");
      out.write("        \treturn false;\n");
      out.write("            }else if($(\"#position\").val() == \"\"){\n");
      out.write("            \talert(\"직위를 입력 주세요\");\n");
      out.write("            \treturn false;\n");
      out.write("            }else if($(\"#year\").val() == \"\"){\n");
      out.write("            \talert(\"경력(년)을 입력 주세요\");\n");
      out.write("            \treturn false;\n");
      out.write("            }\n");
      out.write("            else if($(\"#month\").val() == \"\"){\n");
      out.write("            \talert(\"경력(개월)을 입력 주세요\");\n");
      out.write("            \treturn false;\n");
      out.write("            }\n");
      out.write("        \n");
      out.write("        return true;\n");
      out.write("     }\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\t<form action=\"/career\" method=\"post\" onsubmit=\"return checkItTest()\">\n");
      out.write("\t\t회사명 - <input type=\"text\" id=\"company_name\" name=\"company_name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.company_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"/> \n");
      out.write("\t\t근무부서 -<input type=\"text\" id=\"dept_name\" name=\"dept_name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.dept_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" /> \n");
      out.write("\t\t직위 - <input type=\"text\" id=\"position\" name=\"position\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${dto.position }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" /> \n");
      out.write("\t\t\t<select id=\"year\" name=\"year\">\n");
      out.write("\t\t\t<option value=\"\">::년::</option>\n");
      out.write("\t\t\t<option value=\"0\">0년</option>\n");
      out.write("\t\t\t<option value=\"1\">1년</option>\n");
      out.write("\t\t\t<option value=\"2\">2년</option>\n");
      out.write("\t\t\t<option value=\"3\">3년</option>\n");
      out.write("\t\t\t<option value=\"4\">4년</option>\n");
      out.write("\t\t\t<option value=\"5\">5년</option>\n");
      out.write("\t\t\t<option value=\"6\">6년</option>\n");
      out.write("\t\t\t<option value=\"7\">7년</option>\n");
      out.write("\t\t\t<option value=\"8\">8년</option>\n");
      out.write("\t\t\t<option value=\"9\">9년</option>\n");
      out.write("\t\t\t<option value=\"10\">10년</option>\n");
      out.write("\t\t\t<option value=\"11\">11년</option>\n");
      out.write("\t\t\t<option value=\"12\">12년</option>\n");
      out.write("\t\t\t<option value=\"13\">13년</option>\n");
      out.write("\t\t\t<option value=\"14\">14년</option>\n");
      out.write("\t\t\t<option value=\"15\">15년</option>\n");
      out.write("\t\t\t<option value=\"16\">16년</option>\n");
      out.write("\t\t\t<option value=\"17\">17년</option>\n");
      out.write("\t\t\t<option value=\"18\">18년</option>\n");
      out.write("\t\t\t<option value=\"19\">19년</option>\n");
      out.write("\t\t\t<option value=\"20\">20년</option>\n");
      out.write("\t\t\t<option value=\"21\">21년</option>\n");
      out.write("\t\t\t<option value=\"22\">22년</option>\n");
      out.write("\t\t\t<option value=\"23\">23년</option>\n");
      out.write("\t\t\t<option value=\"24\">24년</option>\n");
      out.write("\t\t\t<option value=\"25\">25년</option>\n");
      out.write("\t\t\t<option value=\"26\">26년</option>\n");
      out.write("\t\t\t<option value=\"27\">27년</option>\n");
      out.write("\t\t\t<option value=\"28\">28년</option>\n");
      out.write("\t\t\t<option value=\"29\">29년</option>\n");
      out.write("\t\t\t<option value=\"30\">30년</option>\n");
      out.write("\t\t</select> \n");
      out.write("\t\t<select id=\"month\" name=\"month\">\n");
      out.write("\t\t\t<option value=\"\">::월::</option>\n");
      out.write("\t\t\t<option value=\"0\">0개월</option>\n");
      out.write("\t\t\t<option value=\"1\">1개월</option>\n");
      out.write("\t\t\t<option value=\"2\">2개월</option>\n");
      out.write("\t\t\t<option value=\"3\">3개월</option>\n");
      out.write("\t\t\t<option value=\"4\">4개월</option>\n");
      out.write("\t\t\t<option value=\"5\">5개월</option>\n");
      out.write("\t\t\t<option value=\"6\">6개월</option>\n");
      out.write("\t\t\t<option value=\"7\">7개월</option>\n");
      out.write("\t\t\t<option value=\"8\">8개월</option>\n");
      out.write("\t\t\t<option value=\"9\">9개월</option>\n");
      out.write("\t\t\t<option value=\"10\">10개월</option>\n");
      out.write("\t\t\t<option value=\"11\">11개월</option>\n");
      out.write("\t\t\t<option value=\"12\">12개월</option>\n");
      out.write("\t\t</select> <input type=\"submit\" value=\"저장후다음\">\n");
      out.write("\t</form>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

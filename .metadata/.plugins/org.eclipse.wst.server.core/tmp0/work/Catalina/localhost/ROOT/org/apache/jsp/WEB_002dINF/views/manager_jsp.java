/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-08-24 09:37:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.woongjin.woongs.model.BalanceDto;
import com.woongjin.woongs.model.T_Paid_HistoryDto;

public final class manager_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1596692701997L));
    _jspx_dependants.put("jar:file:/C:/Users/LeeDongSung/Documents/workspace-spring-tool-suite-4-4.7.0.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/woongs/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.woongjin.woongs.model.BalanceDto");
    _jspx_imports_classes.add("com.woongjin.woongs.model.T_Paid_HistoryDto");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tstyle=\"height: 100px; width: 30%; border: 1px solid black; magin: 5px;\">\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\">수익</div>\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\" id=\"ManagerIncome\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tstyle=\"height: 100px; width: 30%; border: 1px solid black; magin: 5px;\">\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\">수익</div>\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\" id=\"ManagerIncome1\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<canvas id=\"chart_div\" width=\"150\" height=\"150\"></canvas>\r\n");
      out.write("\r\n");
      out.write("\t");
 List<T_Paid_HistoryDto> monthSumProductNo = (List<T_Paid_HistoryDto>) session.getAttribute("monthSumProductNo");
		List<String> tagList = (List<String>) session.getAttribute("tagList");
	
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<td>월</td>\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");
 
		String temp="";
		int trSize = 0;
		for(int i=0; i<monthSumProductNo.size(); i++) {
			// 월 다를 때 
			if(!temp.equals(monthSumProductNo.get(i).getMonth())){
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( monthSumProductNo.get(i).getMonth() );
      out.write("월</td>\r\n");
      out.write("\t\t\t\t\t");
 for(int idx=1; idx<monthSumProductNo.get(i).getProduct_no(); idx++) {
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td>0원</td>\r\n");
      out.write("\t\t\t\t\t\t");
 
							
					}
					trSize = monthSumProductNo.get(i).getProduct_no();
					
      out.write(" \r\n");
      out.write("\t\t\t\t\t<td>");
      out.print( monthSumProductNo.get(i).getPrice() );
      out.write("원</td>\r\n");
      out.write("\t\t\t\t\t");
 
						
      out.write("\r\n");
      out.write(" \t\t\t\t");
 
 				if(i != 0 ) {
 				 
      out.write("\r\n");
      out.write(" \t\t\t\t </tr>\r\n");
      out.write(" \t\t\t\t ");
 
 				}
 				
 			}else {
 				for(int idx=trSize+1; idx<monthSumProductNo.get(i).getProduct_no(); idx++) {
 				
      out.write(" \r\n");
      out.write(" \t\t\t\t\t<td>0원</td>\r\n");
      out.write(" \t\t\t\t");
 	
 				}
 				trSize = monthSumProductNo.get(i).getProduct_no();
 				
      out.write("\r\n");
      out.write(" \t\t\t\t\t<td>");
      out.print( monthSumProductNo.get(i).getPrice() );
      out.write("원</td>\r\n");
      out.write(" \t\t\t\t");
 
 			}
			temp=monthSumProductNo.get(i).getMonth();
			
			}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\r\n");
      out.write("\t\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tmanager.init();\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\tvar charDate = [[1, 0]\r\n");
      out.write("\t,[2, 0]\r\n");
      out.write("\t,[3, 0]\r\n");
      out.write("\t,[4, 0]\t\r\n");
      out.write("\t,[5, 0]\r\n");
      out.write("\t,[6, 0]\r\n");
      out.write("\t,[7, 0]\r\n");
      out.write("\t,[8, 0]\r\n");
      out.write("\t,[9, 0]\r\n");
      out.write("\t,[10, 0]\r\n");
      out.write("\t,[11, 0]\r\n");
      out.write("\t,[12, 0]];\r\n");
      out.write("\r\n");
      out.write("\tvar manager = {\r\n");
      out.write("\t\tinit : function(){\r\n");
      out.write("\t\t\t\tmanager.income_by_user_id();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\r\n");
      out.write("\tincome_by_user_id : function(){\r\n");
      out.write("\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\ttype : \"GET\",\r\n");
      out.write("\t\t\turl : \"manager\",\r\n");
      out.write("\t\t\tdataType : \"json\"\r\n");
      out.write("\t\t}).done(function(datas){\r\n");
      out.write("\t\t\tvar sumPrice = 0;\r\n");
      out.write("\t\t\tvar ManagerIncome = 0;\r\n");
      out.write("\t\t\tvar ManagerIncome1 = 0;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar indexDate = [0,0,0,0,0,0,0,0,0,0,0,0];\r\n");
      out.write("\t\t\tdatas.forEach(function(item, index, data) {\r\n");
      out.write("\t\t\t\tif (item.PRODUCT_NO == \"1\") {\r\n");
      out.write("\t\t\t\t\tManagerIncome += item.PRICE;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tManagerIncome1 += item.PRICE;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tsumPrice += item.PRICE;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar PAID_DATE = new Date(item.PAID_DATE);\r\n");
      out.write("\t\t\t\tvar month = PAID_DATE.toISOString().replace(\"T\", \" \").substring(5, 7)\r\n");
      out.write("\t\t\t\tmonth *=1;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tindexDate[month-1] += item.PRICE;\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tvar ctx = document.getElementById('myChart').getContext('2d');\r\n");
      out.write("\t\t\tvar chart_div = new Chart(ctx, {\r\n");
      out.write("\t\t\t    type: 'bar',\r\n");
      out.write("\t\t\t    data: {\r\n");
      out.write("\t\t\t        labels: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\r\n");
      out.write("\t\t\t        datasets: [{\r\n");
      out.write("\t\t\t            label: '# Manager Income',\r\n");
      out.write("\t\t\t            data: indexDate,\r\n");
      out.write("\t\t\t            backgroundColor:\r\n");
      out.write("\t\t\t                'rgba(255, 99, 132, 0.2)',\r\n");
      out.write("\t\t\t              \r\n");
      out.write("\t\t\t         \r\n");
      out.write("\t\t\t            borderColor: \r\n");
      out.write("\t\t\t                'rgba(255, 99, 132, 1)',\r\n");
      out.write("\t\t\t              \r\n");
      out.write("\t\t\t            \r\n");
      out.write("\t\t\t            borderWidth: 1\r\n");
      out.write("\t\t\t        }]\r\n");
      out.write("\t\t\t    },\r\n");
      out.write("\t\t\t    options: {\r\n");
      out.write("\t\t\t        scales: {\r\n");
      out.write("\t\t\t            yAxes: [{\r\n");
      out.write("\t\t\t                ticks: {\r\n");
      out.write("\t\t\t                    beginAtZero: true\r\n");
      out.write("\t\t\t                }\r\n");
      out.write("\t\t\t            }]\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t    }\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t}).fail(function(e) {\r\n");
      out.write("\t\t\talert(e.responseText);\r\n");
      out.write("\t\t})\r\n");
      out.write("\t},\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/manager.jsp(38,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("tag_name");
      // /WEB-INF/views/manager.jsp(38,2) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/manager.jsp(38,2) '${tagList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${tagList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t<td>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ tag_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\r\n");
            out.write("\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-08-24 09:29:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class manageIncome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t<div style=\"display: flex; width: 100%; height: 100%; border: 1px solid black;\">\r\n");
      out.write("\t\t<!-- 최상단 태그 -->\r\n");
      out.write("\t\t<div style=\"height: 500px; width: 20%; border: 1px solid black\"></div>\r\n");
      out.write("\t\t<div style=\"height: 500px; width: 80%; border: 1px solid black\">\r\n");
      out.write("\t\t\t<div>수익 관리</div>\r\n");
      out.write("\t\t\t<div style=\"display: flex; border: 1px solid black; magin: 5px;\">\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tstyle=\"height: 100px; width: 30%; border: 1px solid black; magin: 5px;\">\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\">총 수익</div>\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\" id=\"totalIncome\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tstyle=\"height: 100px; width: 30%; border: 1px solid black; magin: 5px;\">\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\">확정 수익</div>\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\" id=\"finshYIncome\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div\r\n");
      out.write("\t\t\t\t\tstyle=\"height: 100px; width: 30%; border: 1px solid black; magin: 5px;\">\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\">확정 안된 수익</div>\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 50px;\" id=\"finshNIncome\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<canvas id=\"chart_div\" width=\"150\" height=\"150\"></canvas>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div>입금 계좌 등록</div>\r\n");
      out.write("\t\t\t<div style=\"display: flex; border: 1px solid black; magin: 5px;\" >\r\n");
      out.write("\t\t\t<div style=\"height: 50px; width : 30%;\">\r\n");
      out.write("\t\t\t\t<select id=\"accountSelect\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"height: 50px; width : 30%;\" >\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"accountInput\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"height: 50px; width : 30%;\">\r\n");
      out.write("\t\t\t\t<button id =\"accountButton\">선택</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.8.0\"></script>\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\tincome.init();\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar charDate = [[1, 0]\r\n");
      out.write("\t\t,[2, 0]\r\n");
      out.write("\t\t,[3, 0]\r\n");
      out.write("\t\t,[4, 0]\t\r\n");
      out.write("\t\t,[5, 0]\r\n");
      out.write("\t\t,[6, 0]\r\n");
      out.write("\t\t,[7, 0]\r\n");
      out.write("\t\t,[8, 0]\r\n");
      out.write("\t\t,[9, 0]\r\n");
      out.write("\t\t,[10, 0]\r\n");
      out.write("\t\t,[11, 0]\r\n");
      out.write("\t\t,[12, 0]];\r\n");
      out.write("\r\n");
      out.write("\t\tvar income = {\r\n");
      out.write("\t\t\tinit : function() {\r\n");
      out.write("\t\t\t\tincome.find_income_by_user_id();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tincome.find_account_info_by_user_id();\r\n");
      out.write("\t\t\t\t$(\"#accountButton\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\talert(\"계좌 \"+$(\"#accountSelect\").val()+\"가 선택되었습니다.\")\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#accountSelect\").on(\"change\", function(){\r\n");
      out.write("\t\t\t\t\t$(\"#accountInput\").val($(\"#accountSelect\").val());\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfind_income_by_user_id : function() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype : \"GET\",\r\n");
      out.write("\t\t\t\t\turl : \"findIncomeByUserId\",\r\n");
      out.write("\t\t\t\t\tdataType : 'json'\r\n");
      out.write("\t\t\t\t}).done(function(datas) { \r\n");
      out.write("\t\t\t\t\tvar sumPrice = 0;\r\n");
      out.write("\t\t\t\t\tvar finshYIncome = 0;\r\n");
      out.write("\t\t\t\t\tvar finshNIncome = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar indexDate = [0,0,0,0,0,0,0,0,0,0,0,0];\r\n");
      out.write("\t\t\t\t\tdatas.forEach(function(item, index, data) {\r\n");
      out.write("\t\t\t\t\t\tif (item.FINSH_YN == \"Y\") {\r\n");
      out.write("\t\t\t\t\t\t\tfinshYIncome += item.PRICE;\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\tfinshNIncome += item.PRICE;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tsumPrice += item.PRICE;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tvar PAID_DATE = new Date(item.PAID_DATE);\r\n");
      out.write("\t\t\t\t\t\tvar month = PAID_DATE.toISOString().replace(\"T\", \" \").substring(5, 7)\r\n");
      out.write("\t\t\t\t\t\tmonth *=1;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\tindexDate[month-1] += item.PRICE;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor(var i =0 ; i<indexDate.size; i++){\r\n");
      out.write("\t\t\t\t\t\tcharDate[i][1] = indexDate[i];\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tconsole.log(indexDate);\r\n");
      out.write("\t\t\t\t\t$(\"#totalIncome\").html(sumPrice + \"원\");\r\n");
      out.write("\t\t\t\t\t$(\"#finshYIncome\").html(finshYIncome + \"원\");\r\n");
      out.write("\t\t\t\t\t$(\"#finshNIncome\").html(finshNIncome + \"원\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tvar ctx = document.getElementById('chart_div').getContext('2d');\r\n");
      out.write("\t\t\t\t\tvar chart_div = new Chart(ctx, {\r\n");
      out.write("\t\t\t\t\t    type: 'bar',\r\n");
      out.write("\t\t\t\t\t    data: {\r\n");
      out.write("\t\t\t\t\t        labels: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\r\n");
      out.write("\t\t\t\t\t        datasets: [{\r\n");
      out.write("\t\t\t\t\t            label: '# Total Income',\r\n");
      out.write("\t\t\t\t\t            data: indexDate,\r\n");
      out.write("\t\t\t\t\t            backgroundColor:\r\n");
      out.write("\t\t\t\t\t                'rgba(255, 99, 132, 0.2)',\r\n");
      out.write("\t\t\t\t\t              \r\n");
      out.write("\t\t\t\t\t         \r\n");
      out.write("\t\t\t\t\t            borderColor: \r\n");
      out.write("\t\t\t\t\t                'rgba(255, 99, 132, 1)',\r\n");
      out.write("\t\t\t\t\t              \r\n");
      out.write("\t\t\t\t\t            \r\n");
      out.write("\t\t\t\t\t            borderWidth: 1\r\n");
      out.write("\t\t\t\t\t        }]\r\n");
      out.write("\t\t\t\t\t    },\r\n");
      out.write("\t\t\t\t\t    options: {\r\n");
      out.write("\t\t\t\t\t        scales: {\r\n");
      out.write("\t\t\t\t\t            yAxes: [{\r\n");
      out.write("\t\t\t\t\t                ticks: {\r\n");
      out.write("\t\t\t\t\t                    beginAtZero: true\r\n");
      out.write("\t\t\t\t\t                }\r\n");
      out.write("\t\t\t\t\t            }]\r\n");
      out.write("\t\t\t\t\t        }\r\n");
      out.write("\t\t\t\t\t    }\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}).fail(function(e) {\r\n");
      out.write("\t\t\t\t\talert(e.responseText);\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tfind_account_info_by_user_id : function() {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\ttype : \"GET\",\r\n");
      out.write("\t\t\t\t\turl : \"findAccountInfoByUserId\",\r\n");
      out.write("\t\t\t\t\tdataType : 'json'\r\n");
      out.write("\t\t\t\t}).done(function(datas) {\r\n");
      out.write("\t\t\t\t\tvar selectHtml = \"<option value=''>::선택::</option>\";\r\n");
      out.write("\t\t\t\t\tdatas.forEach(function(item, index, data) {\r\n");
      out.write("\t\t\t\t\t\tselectHtml += \"<option value=\"+\"'\"+item.account_number+\"'\"+\">\"\r\n");
      out.write("\t\t\t\t\t\tselectHtml += item.bank_name\r\n");
      out.write("\t\t\t\t\t\tselectHtml += \"</option>\"\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(datas);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t$(\"#accountSelect\").append(selectHtml);\r\n");
      out.write("\t\t\t\t}).fail(function(e) {\r\n");
      out.write("\t\t\t\t\talert(e.responseText);\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
